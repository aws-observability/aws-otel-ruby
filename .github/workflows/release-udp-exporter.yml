name: Release ADOT X-Ray UDP Exporter
on:
  workflow_dispatch:
    inputs:
      version:
        description: The version to tag the release with, e.g., 1.2.0
        required: true

env:
  RUBY_VERSION: "3.2"

permissions:
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Contrib Repo @ SHA - ${{ github.sha }}
        uses: actions/checkout@v4

      # Install ruby and bundle dependencies and cache!
      - name: Install Ruby ${{ env.RUBY_VERSION }} with dependencies
        uses: ruby/setup-ruby@v1.221.0
        with:
          ruby-version: "${{ env.RUBY_VERSION }}"
          working-directory: "exporter/xray-udp"
          bundler: "latest"
          bundler-cache: true
          cache-version: "v1-ruby-xray-udp"

      - name: Run Unit Tests
        run: |
          cd exporter/xray-udp
          bundle install
          bundle exec rake test

      - name: Configure AWS credentials for Testing Tracing
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.XRAY_UDP_EXPORTER_TEST_ROLE }}
          aws-region: 'us-east-1'

      - name: Download and run X-Ray Daemon
        run: |
          mkdir xray-daemon
          cd xray-daemon
          wget https://s3.us-east-2.amazonaws.com/aws-xray-assets.us-east-2/xray-daemon/aws-xray-daemon-linux-3.x.zip
          unzip aws-xray-daemon-linux-3.x.zip
          ./xray -o -n us-east-2 -f ./daemon-logs.log --log-level debug &

      - name: Setup Sample App
        run: |
          cd .github/test-sample-apps/integ-test-http-server/ruby-on-rails
          bundle install

      - name: Run Sample App in Background
        run: |
          cd .github/test-sample-apps/integ-test-http-server/ruby-on-rails
          LISTEN_ADDRESS=127.0.0.1:8080 rails server &
          # Wait for test server to initialize
          sleep 5

      - name: Call Sample App Endpoint
        id: call-endpoint
        run: |
          echo "traceId=$(curl localhost:8080/test)" >> $GITHUB_OUTPUT

      - name: Check if traces are successfully sent to AWS X-Ray
        run: |
          sleep 20
          # # Print Daemon Logs for debugging
          # cat xray-daemon/daemon-logs.log

          traceId=${{ steps.call-endpoint.outputs.traceId }}
          numTracesFound=$(aws xray batch-get-traces --trace-ids $traceId --region us-east-2 | jq '.Traces' | jq length)
          if [[ numTracesFound -ne "1" ]]; then
            echo "TraceId $traceId not found in X-Ray."
            exit 1
          else
            echo "TraceId $traceId found in X-Ray."
          fi

      # TODO: Publish OTLP UDP Exporter to RubyGems
